"""Add in initial models

Revision ID: d0863240a5c2
Revises: b5795d52a324
Create Date: 2018-03-21 02:36:35.624837

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils as sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'd0863240a5c2'
down_revision = 'b5795d52a324'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('company', sa.Column('city', sa.String(length=64), nullable=True))
    op.add_column('company', sa.Column('last_seen', sa.DateTime(), nullable=True))
    op.add_column('company', sa.Column('name', sa.String(length=100), nullable=True))
    op.add_column('company', sa.Column('state', sa.String(length=64), nullable=True))
    op.add_column('company', sa.Column('street_address', sa.String(length=128), nullable=True))
    op.add_column('company', sa.Column('time_created', sa.DateTime(), nullable=True))
    op.add_column('employee', sa.Column('city', sa.String(length=64), nullable=True))
    op.add_column('employee', sa.Column('company_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True))
    op.add_column('employee', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('employee', sa.Column('last_seen', sa.DateTime(), nullable=True))
    op.add_column('employee', sa.Column('overtime', sa.Boolean(), nullable=True))
    op.add_column('employee', sa.Column('overtime_rate', sa.Integer(), nullable=True))
    op.add_column('employee', sa.Column('payroll_type', sa.Integer(), nullable=True))
    op.add_column('employee', sa.Column('rate', sa.Integer(), nullable=True))
    op.add_column('employee', sa.Column('role', sa.Integer(), nullable=True))
    op.add_column('employee', sa.Column('state', sa.String(length=64), nullable=True))
    op.add_column('employee', sa.Column('street_address', sa.String(length=128), nullable=True))
    op.add_column('employee', sa.Column('time_created', sa.DateTime(), nullable=True))
    op.add_column('employee', sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True))
    op.add_column('employee', sa.Column('wage_type', sa.String(length=32), nullable=True))
    op.create_foreign_key(None, 'employee', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'employee', 'company', ['company_id'], ['id'])
    op.add_column('hours', sa.Column('end', sa.DateTime(), nullable=True))
    op.add_column('hours', sa.Column('last_seen', sa.DateTime(), nullable=True))
    op.add_column('hours', sa.Column('start', sa.DateTime(), nullable=True))
    op.add_column('hours', sa.Column('time_created', sa.DateTime(), nullable=True))
    op.add_column('hours', sa.Column('total_hours', sa.Float(), nullable=True))
    op.add_column('pay_cycle', sa.Column('company_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True))
    op.add_column('pay_cycle', sa.Column('employee_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True))
    op.add_column('pay_cycle', sa.Column('end', sa.DateTime(), nullable=True))
    op.add_column('pay_cycle', sa.Column('last_seen', sa.DateTime(), nullable=True))
    op.add_column('pay_cycle', sa.Column('start', sa.DateTime(), nullable=True))
    op.add_column('pay_cycle', sa.Column('time_created', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'pay_cycle', 'company', ['company_id'], ['id'])
    op.create_foreign_key(None, 'pay_cycle', 'employee', ['employee_id'], ['id'])
    op.add_column('paycycle_hours', sa.Column('fk_hours', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True))
    op.add_column('paycycle_hours', sa.Column('fk_pay_cycle', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True))
    op.create_foreign_key(None, 'paycycle_hours', 'pay_cycle', ['fk_pay_cycle'], ['id'])
    op.create_foreign_key(None, 'paycycle_hours', 'hours', ['fk_hours'], ['id'])
    op.drop_column('paycycle_hours', 'id')
    op.add_column('users', sa.Column('email', sa.String(length=254), nullable=True))
    op.add_column('users', sa.Column('first_name', sa.String(length=35), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(length=35), nullable=True))
    op.add_column('users', sa.Column('last_seen', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('password', sa.String(length=80), nullable=True))
    op.add_column('users', sa.Column('security_answer', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('security_question', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('time_created', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'time_created')
    op.drop_column('users', 'security_question')
    op.drop_column('users', 'security_answer')
    op.drop_column('users', 'password')
    op.drop_column('users', 'last_seen')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'email')
    op.add_column('paycycle_hours', sa.Column('id', sa.CHAR(length=32), nullable=False))
    op.drop_constraint(None, 'paycycle_hours', type_='foreignkey')
    op.drop_constraint(None, 'paycycle_hours', type_='foreignkey')
    op.drop_column('paycycle_hours', 'fk_pay_cycle')
    op.drop_column('paycycle_hours', 'fk_hours')
    op.drop_constraint(None, 'pay_cycle', type_='foreignkey')
    op.drop_constraint(None, 'pay_cycle', type_='foreignkey')
    op.drop_column('pay_cycle', 'time_created')
    op.drop_column('pay_cycle', 'start')
    op.drop_column('pay_cycle', 'last_seen')
    op.drop_column('pay_cycle', 'end')
    op.drop_column('pay_cycle', 'employee_id')
    op.drop_column('pay_cycle', 'company_id')
    op.drop_column('hours', 'total_hours')
    op.drop_column('hours', 'time_created')
    op.drop_column('hours', 'start')
    op.drop_column('hours', 'last_seen')
    op.drop_column('hours', 'end')
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_constraint(None, 'employee', type_='foreignkey')
    op.drop_column('employee', 'wage_type')
    op.drop_column('employee', 'user_id')
    op.drop_column('employee', 'time_created')
    op.drop_column('employee', 'street_address')
    op.drop_column('employee', 'state')
    op.drop_column('employee', 'role')
    op.drop_column('employee', 'rate')
    op.drop_column('employee', 'payroll_type')
    op.drop_column('employee', 'overtime_rate')
    op.drop_column('employee', 'overtime')
    op.drop_column('employee', 'last_seen')
    op.drop_column('employee', 'is_active')
    op.drop_column('employee', 'company_id')
    op.drop_column('employee', 'city')
    op.drop_column('company', 'time_created')
    op.drop_column('company', 'street_address')
    op.drop_column('company', 'state')
    op.drop_column('company', 'name')
    op.drop_column('company', 'last_seen')
    op.drop_column('company', 'city')
    # ### end Alembic commands ###
